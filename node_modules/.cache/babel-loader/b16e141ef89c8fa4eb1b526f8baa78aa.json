{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Josepha\\\\Desktop\\\\React Taschenrechner\\\\src\\\\Calculator.jsx\";\n// --------- Calculator.jsx ----------\nimport React, { Component } from \"react\"; // Importiere die Kind-Komponenten:\n\nimport Label from \"./components/Label.jsx\";\nimport Result from \"./components/Result.jsx\";\nimport Keypad from \"./components/Keypad.jsx\";\n\nvar Calculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calculator, _Component);\n\n  // Initialisiere den state im Konstruktor:\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calculator).call(this, props));\n    _this.state = {\n      result: \"\"\n    };\n    return _this;\n  } // Rufe, je nachdem welchen Wert der gedrückte Button hat, die entsprechende Hilfsfunktion auf:\n\n\n  _createClass(Calculator, [{\n    key: \"handleKeyClick\",\n    value: function handleKeyClick(keyValue) {\n      switch (keyValue) {\n        case \"=\":\n          this.calculate();\n          break;\n\n        case \"C\":\n          this.reset();\n          break;\n\n        case \"CE\":\n          this.backspace();\n          break;\n\n        default:\n          // Füge den Wert des gedrückten Buttons zum Eingabe-String im state hinzu:\n          this.setState({\n            result: this.state.result + keyValue\n          });\n      }\n    } // Hilsfunktion: Berechnen\n\n  }, {\n    key: \"calculate\",\n    value: function calculate() {\n      try {\n        this.setState({\n          result: (eval(this.state.result) || \"\") + \"\" // die oder-Verknüpfung verhindert, dass bei leerer Eingabe \"undefined\" in den state geschrieben wird\n          // die String-Konkatenation verhindert, dass nach Auswertung eine bloße Zahl im result steht und die Anwendung der slice-Funktion im backspace fehlschlägt\n\n        });\n      } catch (e) {\n        this.setState({\n          result: \"error\"\n        });\n      }\n    } // Hilfsfunktion: Zurücksetzen\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setState({\n        result: \"\"\n      });\n    } // Hilfsfunktion: Letzte Stelle löschen\n\n  }, {\n    key: \"backspace\",\n    value: function backspace() {\n      this.setState({\n        result: this.state.result.slice(0, -1) //slice-Funktion: Start bei 0 und Ende bei -1 --> letzte Stelle entfernt\n\n      });\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (\"error\" === this.state.result) {\n        //falls: error wird im Result-Bereich angezeigt\n        return !(\"error\" === nextState.result); //dann: erneutes Anzeigen von error verhindern\n      } else {\n        return true; //sonst: Komponente soll neu gerendert werden\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var endDate = new Date();\n      var diffDate = endDate - this.date;\n      this.setState({\n        result: diffDate\n      });\n      setTimeout(function () {// Verzögerung von 2 Sekunden\n      }, 5000);\n    } // render()-Funktion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // Styling für den Hintergrund des Taschenrechners:\n      var backgroundStyle = {\n        backgroundColor: \"#20232a\",\n        width: \"250px\",\n        height: \"545px\",\n        margin: \"50px 0\",\n        border: \"4px solid #61dafb\",\n        borderRadius: \"8px\"\n      }; // Gib alle 4 Komponenten, vereint in einem div-Element, zurück:\n\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: backgroundStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"./logo.svg\"),\n        alt: \"Logo\",\n        style: {\n          width: \"100px\",\n          height: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Result, {\n        value: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Keypad, {\n        onKeyClick: function onKeyClick(e) {\n          return _this2.handleKeyClick(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Calculator;\n}(Component);\n\nexport default Calculator;","map":{"version":3,"sources":["C:\\Users\\Josepha\\Desktop\\React Taschenrechner\\src\\Calculator.jsx"],"names":["React","Component","Label","Result","Keypad","Calculator","props","state","result","keyValue","calculate","reset","backspace","setState","eval","e","slice","nextProps","nextState","endDate","Date","diffDate","date","setTimeout","backgroundStyle","backgroundColor","width","height","margin","border","borderRadius","require","handleKeyClick"],"mappings":"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","sourcesContent":["// --------- Calculator.jsx ----------\r\n\r\nimport React, { Component } from \"react\";\r\n// Importiere die Kind-Komponenten:\r\nimport Label from \"./components/Label.jsx\";\r\nimport Result from \"./components/Result.jsx\";\r\nimport Keypad from \"./components/Keypad.jsx\";\r\n\r\nclass Calculator extends Component {\r\n  // Initialisiere den state im Konstruktor:\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: \"\"\r\n    };\r\n  }\r\n  // Rufe, je nachdem welchen Wert der gedrückte Button hat, die entsprechende Hilfsfunktion auf:\r\n  handleKeyClick(keyValue) {\r\n    switch (keyValue) {\r\n      case \"=\":\r\n        this.calculate();\r\n        break;\r\n      case \"C\":\r\n        this.reset();\r\n        break;\r\n      case \"CE\":\r\n        this.backspace();\r\n        break;\r\n      default:\r\n        // Füge den Wert des gedrückten Buttons zum Eingabe-String im state hinzu:\r\n        this.setState({\r\n          result: this.state.result + keyValue\r\n        });\r\n    }\r\n  }\r\n  // Hilsfunktion: Berechnen\r\n  calculate() {\r\n    try {\r\n      this.setState({\r\n        result: (eval(this.state.result) || \"\") + \"\"\r\n        // die oder-Verknüpfung verhindert, dass bei leerer Eingabe \"undefined\" in den state geschrieben wird\r\n        // die String-Konkatenation verhindert, dass nach Auswertung eine bloße Zahl im result steht und die Anwendung der slice-Funktion im backspace fehlschlägt\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        result: \"error\"\r\n      });\r\n    }\r\n  }\r\n  // Hilfsfunktion: Zurücksetzen\r\n  reset() {\r\n    this.setState({\r\n      result: \"\"\r\n    });\r\n  }\r\n\r\n  // Hilfsfunktion: Letzte Stelle löschen\r\n  backspace() {\r\n    this.setState({\r\n      result: this.state.result.slice(0, -1) //slice-Funktion: Start bei 0 und Ende bei -1 --> letzte Stelle entfernt\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\"error\" === this.state.result) {\r\n      //falls: error wird im Result-Bereich angezeigt\r\n      return !(\"error\" === nextState.result); //dann: erneutes Anzeigen von error verhindern\r\n    } else {\r\n      return true; //sonst: Komponente soll neu gerendert werden\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let endDate = new Date();\r\n    let diffDate = endDate - this.date;\r\n    this.setState({\r\n      result: diffDate\r\n    });\r\n    setTimeout(function() {\r\n      // Verzögerung von 2 Sekunden\r\n    }, 5000);\r\n  }\r\n  // render()-Funktion\r\n  render() {\r\n    // Styling für den Hintergrund des Taschenrechners:\r\n    let backgroundStyle = {\r\n      backgroundColor: \"#20232a\",\r\n      width: \"250px\",\r\n      height: \"545px\",\r\n      margin: \"50px 0\",\r\n      border: \"4px solid #61dafb\",\r\n      borderRadius: \"8px\"\r\n    };\r\n    // Gib alle 4 Komponenten, vereint in einem div-Element, zurück:\r\n    return (\r\n      <center>\r\n        <div style={backgroundStyle}>\r\n          <img\r\n            src={require(\"./logo.svg\")}\r\n            alt=\"Logo\"\r\n            style={{ width: \"100px\", height: \"100px\" }}\r\n          />\r\n          <Label />\r\n          <Result value={this.state.result} />\r\n          <Keypad onKeyClick={e => this.handleKeyClick(e)} />\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}